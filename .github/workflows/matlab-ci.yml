name: MATLAB CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run MATLAB Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2023b
      
      - name: Run MATLAB build
        uses: matlab-actions/run-build@v2
        with:
          tasks: test
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
      
      - name: Upload code coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-coverage
          path: code-coverage/

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2023b
      
      - name: Run MATLAB build
        uses: matlab-actions/run-build@v2
        with:
          tasks: check

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [test, code-quality]
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2023b
      
      - name: Install virtual display
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
      
      - name: Generate documentation
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 3
        
      - name: Generate MATLAB documentation with plots
        uses: matlab-actions/run-command@v2
        with:
          command: |
            % Set up for headless plotting
            set(0, 'DefaultFigureVisible', 'off');
            set(0, 'DefaultFigurePaperPositionMode', 'auto');
            
            % Add paths
            addpath(genpath('src'));
            addpath('examples');
            
            % Create output directory
            if ~exist('docs/html', 'dir')
                mkdir('docs/html');
            end
            
            % Publish the demo script with plots
            options = struct();
            options.format = 'html';
            options.outputDir = 'docs/html';
            options.showCode = true;
            options.evalCode = true;
            options.catchError = false;
            options.figureSnapMethod = 'print';
            options.imageFormat = 'png';
            options.maxHeight = 600;
            options.maxWidth = 800;
            
            try
                publish('run_all_demos', options);
                disp('Documentation generated successfully!');
            catch ME
                disp('Error generating documentation:');
                disp(ME.message);
                rethrow(ME);
            end
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/html