% Generate documentation with plots for GitHub Pages
fprintf('Generating documentation plots...\n');

% Create output directory
if ~exist('docs/html', 'dir')
    mkdir('docs/html');
end

% Set up for saving plots
set(0, 'DefaultFigureVisible', 'off');
set(0, 'DefaultFigureWindowStyle', 'normal');
set(0, 'DefaultFigurePaperPositionMode', 'auto');

%% Generate Pendulum Simulation Plot
fprintf('Creating pendulum simulation plot...\n');

L = 1;
theta0 = pi/3;
omega0 = 0;
tspan = [0 20];

[t1, theta1, omega1] = pendulum_simulation(L, theta0, omega0, tspan);
[t2, theta2, omega2] = pendulum_simulation(L, theta0, omega0, tspan, 'damping', 0.5);

fig1 = figure();
subplot(2,2,1);
plot(t1, theta1*180/pi, 'b-', t2, theta2*180/pi, 'r--', 'LineWidth', 2);
xlabel('Time (s)'); ylabel('Angle (degrees)');
title('Pendulum Angle vs Time');
legend('Undamped', 'Damped', 'Location', 'best');
grid on;

subplot(2,2,2);
plot(t1, omega1, 'b-', t2, omega2, 'r--', 'LineWidth', 2);
xlabel('Time (s)'); ylabel('Angular Velocity (rad/s)');
title('Angular Velocity vs Time');
legend('Undamped', 'Damped', 'Location', 'best');
grid on;

subplot(2,2,[3,4]);
plot(theta1, omega1, 'b-', 'LineWidth', 2);
xlabel('Angle (rad)'); ylabel('Angular Velocity (rad/s)');
title('Phase Space - Undamped Pendulum');
grid on;

print(fig1, 'docs/html/pendulum_simulation.png', '-dpng', '-r150');
close(fig1);

%% Generate Particle Dynamics Plot
fprintf('Creating particle dynamics plot...\n');

mass = 0.5;
g = 9.81;
drag_coeff = 0.1;
force_with_drag = @(t, x, v) [0; 0; -mass*g] - drag_coeff * norm(v) * v;
force_no_drag = @(t, x, v) [0; 0; -mass*g];
x0 = [0; 0; 0];
v0 = [20; 0; 20];
tspan = [0 4];

[t_drag, pos_drag, ~] = particle_dynamics(mass, force_with_drag, x0, v0, tspan);
[t_no_drag, pos_no_drag, ~] = particle_dynamics(mass, force_no_drag, x0, v0, tspan);

fig2 = figure();
subplot(1,2,1);
plot3(pos_drag(:,1), pos_drag(:,2), pos_drag(:,3), 'r-', 'LineWidth', 2);
hold on;
plot3(pos_no_drag(:,1), pos_no_drag(:,2), pos_no_drag(:,3), 'b--', 'LineWidth', 2);
xlabel('X (m)'); ylabel('Y (m)'); zlabel('Z (m)');
title('3D Projectile Motion');
legend('With air resistance', 'Without air resistance', 'Location', 'best');
grid on;
view(45, 30);

subplot(1,2,2);
plot(pos_drag(:,1), pos_drag(:,3), 'r-', 'LineWidth', 2);
hold on;
plot(pos_no_drag(:,1), pos_no_drag(:,3), 'b--', 'LineWidth', 2);
xlabel('Horizontal Distance (m)'); ylabel('Height (m)');
title('2D Trajectory View');
legend('With air resistance', 'Without air resistance', 'Location', 'best');
grid on;

print(fig2, 'docs/html/particle_dynamics.png', '-dpng', '-r150');
close(fig2);

%% Generate Wave Equation Plot
fprintf('Creating wave equation plot...\n');

L = 10;
T = 2;
c = 2;
initial_u = @(x) sin(2*pi*x/L);
initial_ut = @(x) zeros(size(x));

[u, x, t] = wave_equation_solver(L, T, c, initial_u, initial_ut, 'nx', 100, 'nt', 100);

fig3 = figure();
time_indices = round(linspace(1, length(t), 6));

for i = 1:6
    idx = time_indices(i);
    subplot(2,3,i);
    plot(x, u(:,idx), 'b-', 'LineWidth', 2);
    ylim([-1.5 1.5]);
    xlabel('x'); ylabel('u');
    title(sprintf('t = %.2f s', t(idx)));
    grid on;
end

sgtitle('Wave Equation Evolution');
print(fig3, 'docs/html/wave_equation.png', '-dpng', '-r150');
close(fig3);

%% Generate HTML Documentation
fprintf('Creating HTML documentation...\n');

html_content = [...
'<!DOCTYPE html>\n' ...
'<html>\n' ...
'<head>\n' ...
'<title>MATLAB Physics Simulations Documentation</title>\n' ...
'<style>\n' ...
'body { font-family: Arial, sans-serif; margin: 40px; }\n' ...
'h1 { color: #333; }\n' ...
'h2 { color: #666; margin-top: 30px; }\n' ...
'img { max-width: 100%; height: auto; margin: 20px 0; border: 1px solid #ddd; }\n' ...
'.function-list { background: #f5f5f5; padding: 20px; border-radius: 5px; }\n' ...
'.function-list li { margin: 10px 0; }\n' ...
'code { background: #f0f0f0; padding: 2px 5px; border-radius: 3px; }\n' ...
'</style>\n' ...
'</head>\n' ...
'<body>\n' ...
'<h1>MATLAB Physics Simulations</h1>\n' ...
'<p>This project provides physics simulations including pendulum motion, particle dynamics, and wave equation solvers.</p>\n' ...
'\n' ...
'<h2>Available Functions</h2>\n' ...
'<div class="function-list">\n' ...
'<ul>\n' ...
'<li><strong>pendulum_simulation</strong> - Simulates pendulum motion with optional damping</li>\n' ...
'<li><strong>particle_dynamics</strong> - Simulates 3D particle motion under external forces</li>\n' ...
'<li><strong>wave_equation_solver</strong> - Solves 1D wave equation with various boundary conditions</li>\n' ...
'<li><strong>create_mass_spring_damper_model</strong> - Creates Simulink model for mass-spring-damper system</li>\n' ...
'<li><strong>plot_phase_space</strong> - Plots phase space diagram for dynamical systems</li>\n' ...
'</ul>\n' ...
'</div>\n' ...
'\n' ...
'<h2>Pendulum Simulation</h2>\n' ...
'<p>Comparison of damped and undamped pendulum motion, showing angle, angular velocity, and phase space.</p>\n' ...
'<img src="pendulum_simulation.png" alt="Pendulum Simulation Results">\n' ...
'\n' ...
'<h2>Particle Dynamics</h2>\n' ...
'<p>3D projectile motion simulation comparing trajectories with and without air resistance.</p>\n' ...
'<img src="particle_dynamics.png" alt="Particle Dynamics Results">\n' ...
'\n' ...
'<h2>Wave Equation Solver</h2>\n' ...
'<p>Evolution of a sinusoidal wave over time, demonstrating the finite difference solution.</p>\n' ...
'<img src="wave_equation.png" alt="Wave Equation Results">\n' ...
'\n' ...
'<h2>Usage Example</h2>\n' ...
'<pre><code>\n' ...
'% Simulate a pendulum\n' ...
'L = 1;  % Length in meters\n' ...
'theta0 = pi/4;  % Initial angle\n' ...
'omega0 = 0;  % Initial angular velocity\n' ...
'[t, theta, omega] = pendulum_simulation(L, theta0, omega0, [0 10]);\n' ...
'\n' ...
'% Simulate particle motion\n' ...
'mass = 1;\n' ...
'F = @(t,x,v) [0; 0; -9.81*mass];  % Gravity\n' ...
'[t, pos, vel] = particle_dynamics(mass, F, [0;0;10], [5;0;5], [0 2]);\n' ...
'</code></pre>\n' ...
'\n' ...
'<h2>Demo Script</h2>\n' ...
'<p>Run <code>run_all_demos</code> in MATLAB to see interactive demonstrations of all simulations.</p>\n' ...
'\n' ...
'<p>See the <a href="https://github.com/murr2k/matlab-app-dev">GitHub repository</a> for source code and more examples.</p>\n' ...
'</body>\n' ...
'</html>\n'];

fid = fopen('docs/html/index.html', 'w');
fprintf(fid, '%s', html_content);
fclose(fid);

fprintf('Documentation generation complete!\n');